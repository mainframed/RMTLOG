*---------------------------------------------------------------------*
* RMTLOG  - MVS Remote Syslog Facility.                               *
*---------------------------------------------------------------------*
* RLCLOS  - Remote syslog closedown.                                  *
*---------------------------------------------------------------------*
* Entry (Called by RMTLOG):                                           *
* - R11 - Points to common storage area.  Use this for base reg.      *
* Regs:                                                               *
* - R12 - Base register for this program.                             *
* - R13 - Points to private storage area.                             *
*---------------------------------------------------------------------*
* 1) Open and process PARMS file.                                     *
*---------------------------------------------------------------------*
* 04/19/2010 John C. Miller                                           *
*---------------------------------------------------------------------*
*
*=====================================================================*
* RMTLOG Remote logging program copyright 2010-2017 John C. Miller.   *
*---------------------------------------------------------------------*
* This program is free software: you can redistribute it and/or       *
* modify it under the terms of the GNU General Public License as      *
* published by the Free Software Foundation, either version 3 of      *
* the License, or (at your option) any later version.                 *
*                                                                     *
* This program is distributed in the hope that it will be useful,     *
* but WITHOUT ANY WARRANTY; without even the implied warranty of      *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       *
* GNU General Public License in member $GPL for more details.         *
*---------------------------------------------------------------------*
         GBLB  &NODEBUG
&NODEBUG SETB  1
*
         PRINT GEN,DATA
RLCLOS   CSECT
RLCLOS   AMODE ANY
RLCLOS   RMODE ANY
         YREGS
*---------------------------------------------------------------------*
* Prolog - Get private and common storage areas and set up.
*---------------------------------------------------------------------*
         BAKR  R14,0                Save caller env.
         LR    R12,R15              Load base reg.
         USING RLCLOS,R12           Addressability.
         MODID ,                    Eyecatcher.
         LR    R2,R1                Save R1 contents.
         STORAGE OBTAIN,LENGTH=DYNL Obtain private work area.
         LR    R13,R1               Load base reg.
         USING DATD,R13             DSECT addressability
         MVC   4(4,R13),=C'F1SA'    Indicate Fmt1 save area.
         USING RLCOMM,R11           Comm area addressability.
*---------------------------------------------------------------------*
* Issue SHUTDOWN - HOW = 1 (end communication TO socket)              *
*---------------------------------------------------------------------*
SHUTDOWN DS    0H
         MVC   HOW,=F'2'
         BAL   R14,SHUTSUB         Close socket.
*---------------------------------------------------------------------*
* CLOSESC - Close socket and free resources.                          *
*---------------------------------------------------------------------*
CLOSESC  DS    0H
         EZASMI TYPE=CLOSE,        Close.                              X
               S=S,                Socket.                             X
               ERRNO=ERRNO,        Output: ERRNO                       X
               RETCODE=RETCODE,    Output: RETCODE                     X
               ERROR=ERROR         Abend if Macro error
*---------------------------------------------------------------------*
* RETURN                                                              *
*---------------------------------------------------------------------*
EXITOK   DS    0H
         SR    R10,R10
         B     EXIT
ERROR    DS    0H
         LA    R10,8               Set return code 8 (error).
EXIT     DS    0H
         CLI   SYSPOK,C'Y'         Was SYSPRINT opened ok?
         BNE   EXIT0               No, don't close it.
         CLOSE MF=(E,GOPENOUT)     Close SYSPRINT file.
         MVI   SYSPOK,C'N'         Mark SYSPRINT unusable.
EXIT0    DS    0H
         LR    R1,R13              Get address of RELEASE.
         STORAGE RELEASE,LENGTH=DYNL,ADDR=(1)
         PR                        Return to caller.
*---------------------------------------------------------------------*
* SHUTSUB - Shut down socket.  The HOW variable is a fullword         *
* containing the type of shutdown: 1 = TO, 0 = FROM.                  *
*---------------------------------------------------------------------*
SHUTSUB  EQU   *
         LR    R7,R14
         EZASMI TYPE=SHUTDOWN,    Issue Macro                          X
               S=S,               STREAM                               X
               HOW=HOW,           End communication in both directions X
               ERRNO=ERRNO,       (Specify ERRNO field)                X
               RETCODE=RETCODE,   (Specify RETCODE field)              X
               ERROR=ERROR        Abend if Macro error
         BR    R7                 --> RETURN TO CALLER
*---------------------------------------------------------------------*
*  MSG - WTO a message, and write it to SYSPRINT if open.             *
*---------------------------------------------------------------------*
MSG      DS      0H
         BAKR    R14,0             Save callers environment.
         SAC     0                 Set primary mode.
         SYSSTATE ASCENV=P         Tell macros PRIMARY mode.
         MVC     WTOPL,WTOPLM      Set up parm list.
         LR      R2,R1             Point R2 to msg text passed in R1.
         WTO     TEXT=(R2),        WTO the message.                    X
               MF=(E,WTOPL)
         CLI   SYSPOK,C'Y'         OK to write to SYSPRINT?
         BNE   NOSYSP0             No, branch around.
         MVC   BUFFER,BLANKS       Clear message buffer.
         LA    R4,BUFFER           -> buffer.
         SR    R5,R5               Clear reg.
         LH    R5,0(R2)            Len of MVCL.
         LR    R7,R5               Len of MVCL.
         LA    R8,2(R2)            -> message text.
         MVCL  R4,R8
         PUT   GTEXTOUT,BUFFER     Write data to SYSPRINT.
NOSYSP0  DS    0H
         PR                        Return to caller.
*---------------------------------------------------------------------*
* Write a line to SYSPRINT.
*---------------------------------------------------------------------*
PUTLINE  DS    0H
         BAKR  R14,0               Save callers environment.
         CLI   SYSPOK,C'Y'         OK to write to SYSPRINT?
         BNE   NOSYSP1             No, branch around.
         PUT   GTEXTOUT,BUFFER     Write data to SYSPRINT.
NOSYSP1  DS    0H
         PR
*---------------------------------------------------------------------*
* LEN - Get length of a blank terminated field.
* ENTRY:
*    R0 - Maximum length of string.
*    R1 - Points to start of string.
* EXIT:
*    R1 - Length of string.
*---------------------------------------------------------------------*
LEN      DS    0H
         SR    R15,R15
LENTOP   DS    0H
         CLI   0(R1),C' '             Blank?
         BE    LENDONE                Yes, Return with len in R15.
         LA    R1,1(R1)               Bump over 1.
         LA    R15,1(R15)             Bump over 1.
         CR    R15,R0                 End of search yet?
         BL    LENTOP                 No, keep looking.
LENDONE  DS    0H
         LR    R1,R15                 Load len in R0
         BR    R6
*---------------------------------------------------------------------*
* MACROS and constants.                                               *
*---------------------------------------------------------------------*
         RLCOMM CONST
         LTORG
WTOPLM   WTO TEXT=,DESC=(7),MF=L   WTO parm list.
WTOPLL   EQU *-WTOPLM
*
*---------------------------------------------------------------------*
*   Private working storage.
*---------------------------------------------------------------------*
DATD     DSECT
SAVE     DS    18F                 Register save area.
WTOPL    DS    CL(WTOPLL)          WTO parm list.
*---------------------------------------------------------------------*
*   MACRO storage.
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*   End on doubleword boundary.                                       *
*---------------------------------------------------------------------*
         DS    0D
ENDDATD  EQU   *
DYNL     EQU   *-DATD
*---------------------------------------------------------------------*
*   Common Storage DSECT.                                             *
*---------------------------------------------------------------------*
         RLCOMM DSECT
         IKJCPPL
         END   RLCLOS
*---------------------------------------------------------------------*
*   PUNCH the linkedit control statements here.                       *
*---------------------------------------------------------------------*
         PUNCH ' SETCODE  AC(1)        '
         PUNCH ' ENTRY    RLCLOS       '
         PUNCH ' NAME     RLCLOS(R)    '
         END
