*---------------------------------------------------------------------*
* JULIAN - Convert date to/from Julian.                               *
*---------------------------------------------------------------------*
* Input - R1 -> parameter list:                                       *
* +0 - -> CL7 field, like: C'2010123'                                 *
* +4 - -> XL1 Options field:                                          *
*    EQU  X'80' - Convert to Julian. (**)                             *
*    EQU  X'40' - Convert to Gregorian.                               *
*    EQU  X'20' - Return EBCDIC date like: mm/dd/yyyy                 *
*    EQU  X'10' - Return EBCDIC date like: Jun 25 2010                *
*    EQU  X'08' - Return binary date like: X'20101115' (**)           *
* +8 - -> Output field to contain converted date.                     *
* Output: R1 -> parameter list:                                       *
*                                                                     *
* (**) - Not yet implemented.                                         *
*---------------------------------------------------------------------*
* 06/04/2010 John C. Miller - john@jmit.com                           *
*=====================================================================*
* RMTLOG Remote logging program copyright 2010-2017 John C. Miller.   *
*---------------------------------------------------------------------*
* This program is free software: you can redistribute it and/or       *
* modify it under the terms of the GNU General Public License as      *
* published by the Free Software Foundation, either version 3 of      *
* the License, or (at your option) any later version.                 *
*                                                                     *
* This program is distributed in the hope that it will be useful,     *
* but WITHOUT ANY WARRANTY; without even the implied warranty of      *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       *
* GNU General Public License in member $GPL for more details.         *
*---------------------------------------------------------------------*
         GBLB  &NODEBUG
&NODEBUG SETB  0
JULIAN   CSECT
JULIAN   AMODE ANY
JULIAN   RMODE ANY
         PRINT GEN,DATA
         YREGS                     Do register equates.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* Prolog - Get private and common storage areas and set up.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         BAKR  R14,0                Save caller env.
         LR    R12,R15              Load base reg.
         USING JULIAN,R12           Addressability.
         MODID ,                    Eyecatcher.
         LR    R2,R1                Save R1 contents.
         STORAGE OBTAIN,LENGTH=DYNL Obtain private work area.
         LR    R13,R1               Load base reg.
         USING DATD,R13             DSECT addressability
         MVC   4(4,R13),=C'F1SA'    Indicate Fmt1 save area.
         LR    R1,R2                Get original R1 for CPPL/PUTLINE.
         L     R3,0(R2)             -> date to convert.
         MVC   JULDATE,0(R3)        Move date.
         L     R3,4(R2)             -> options byte.
         MVC   FLAG,0(R3)           move options byte.
*        MVI   FLAG,X'50'          TEST
*        MVC   JULDATE,=C'2012156' TEST
         L     R3,8(R2)            -> output variable.
         TM    FLAG,X'40'          Convert to gregorian?
         BO    GREGORN             Yes, do that.
         B     EXIT                No, exit.
*---------------------------------------------------------------------*
* GREGORIAN - Convert Julian to Gregorian.                            *
*---------------------------------------------------------------------*
GREGORN  DS    0H
         PACK  WRKD,YYYYC          Convert year to packed decimal.
         CVB   R2,WRKD             Convert to binary.
         ST    R2,YYYYB            Store binary year.
         PACK  WRKD,DDDC           Convert day to packed decimal.
         CVB   R2,WRKD             Convert to binary.
         ST    R2,DDDB             Store binary day.
         MVC   WMONSH,MONSH
         TM    YYYYB+3,B'00000011' Is year divisible by 4?
         BNZ   DPM365              No, not a leap year.
         CLC   YYYYC+2,=C'00'      Is year centenary (century)
         BNE   DPM366              No, this is a leap year.
         L     R15,YYYYB           Load binary year.
         SR    R14,R14             Clear high word for divide.
         D     R14,=F'400'         Divide by 400.
         LTR   R14,R14             Is year evenly divisible by 400?
         BNZ   DPM365              No, then not a leap year.
DPM366   DS    0H                  Yes, add 1 to February days.
         MVI   WMONSH+3,29
DPM365   DS    0H
         LA    R4,WMONSH           -> month array.
         SR    R10,R10             Clear index reg.
         SR    R9,R9               Clear reg.
         L     R8,DDDB             Get Julian days in reg.
*---------------------------------------------------------------------*
* WMONSH contains a series of halfwords with the length of each       *
* month Jan-Dec.                                                      *
* 001F 001C 001F 001E 001F 001E 001F 001F 001E 001F 001E 001F         *
*---------------------------------------------------------------------*
JTOP     DS    0H
         AH    R9,WMONSH(R10)      Add number of days in this month.
         ST    R9,TST9
         CR    R8,R9               Are jdays < cumulative days?
         BL    JDCALC              No, go figure out day.
         LA    R10,2(R10)          -> next month's days.
         B     JTOP                Check again.
JDCALC   DS    0H
         SH    R9,WMONSH(R10)      Take this month back off.
         SR    R8,R9               Subtract binary julian days for day.
         SRL   R10,1               /2 to get month.
*        Convert day to EBCDIC.
         CVD   R8,WRKD             Convert day to packed decimal.
         OI    WRKD+7,X'0F'        Fix sign.
         UNPK  WRKD(2),WRKD+6(2)   Unpack it
         MVC   DAY,WRKD            Move to DAY field.
*        TPUT  DAY,2
         TM    FLAG,X'10'          "Jan 25 2010" style date?
         BO    JANSTYLE            Yes, go do it.
TERSESTY DS    0H
         MVC   0(10,R3),=CL11' '   Initialize output to blanks.
         MVC   3(2,R3),DAY         Move DAY to output in TERSE format.
         MVI   2(R3),C'/'          Move slash.
         MVI   5(R3),C'/'          Move slash.
         LA    R10,1(R10)          Add 1 for month.
         CVD   R10,WRKD            Convert month to packed decimal.
         OI    WRKD+7,X'0F'        Fix sign.
         UNPK  0(2,R3),WRKD+6(2)   Unpack it
         MVC   6(4,R3),YYYYC       Move year.
         B     EXIT                Leave.
JANSTYLE DS    0H                  R10 contains month-1 in binary.
         MVC   0(11,R3),=CL11' '   Initialize output to blanks.
         SLL   R10,2               Multiply R10 x 2
         LA    R4,MONS             Point to month constants.
         L     R5,0(R4,R10)        Load month constant.
         ST    R5,0(R3)            Store mon in "Jan " fmt in output.
         MVC   4(2,R3),DAY         Move Day.
         MVI   6(R3),C' '
         MVC   7(4,R3),YYYYC       Move year.
*---------------------------------------------------------------------*
* Exit - Release storage and return to caller.                        *
*---------------------------------------------------------------------*
EXIT     DS    0H
         LR    R1,R13
         STORAGE RELEASE,LENGTH=DYNL,ADDR=(1)
         PR                        Return to caller.
         DC    X'0D25'
MONSH    DC    H'31,28,31,30,31,30,31,31,30,31,30,31,999'
MONSHL   EQU   *-MONSH
MONS     DC    C'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'
*---------------------------------------------------------------------*
*   Private working storage.
*---------------------------------------------------------------------*
DATD     DSECT                     Dynamic area.
SAVE     DS    18F                 Register save area.  Must be first
*---
DWORK    DS    D
WRK      DS    CL8
JULDATE  DS    0CL7
YYYYC    DS    CL4
DDDC     DS    CL3
YYYYB    DS    F
DDDB     DS    F
WRKD     DS    D
WRKF     DS    F
WMONSH   DS    CL(MONSHL)
TST9     DS    F
FLAG     DS    X
DAY      DS    CL2
*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* M I S C . . . . . . . . . . .
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*---------------------------------------------------------------------*
*   End on doubleword boundary.                                       *
*---------------------------------------------------------------------*
         DS    0D
ENDDATD  EQU   *
DYNL     EQU    *-DATD
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* DSECT mapping macros.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         END   JULIAN
*---------------------------------------------------------------------*
*   PUNCH the linkedit control statements here.                       *
*---------------------------------------------------------------------*
         PUNCH ' ENTRY    JULIAN       '
         PUNCH ' NAME     JULIAN(R)    '
         END
