         MACRO
&NAME    STR   &OPT,&P1,&P2
.*--------------------------------------------------------------------*
.* STR - String manipulation functions.
.*--------------------------------------------------------------------*
.* 04/19/2010 John C. Miller
.*--------------------------------------------------------------------*
.* Overview: On the first invocation of a particular option, the code
.* needed for that option is inserted in-line, immediately preceeded by
.* a branch around the code.  This enables the code to be called as a
.* subroutine.  The code is only generated once, and subsequent calls
.* to the same function involve only setting up parms and BAL to the
.* previously embedded in-line code.
.*--------------------------------------------------------------------*
.* Invocation options:
.*
.* RJUST FLD,Length - Right justify the field FLD. The length of the
.* field operated on is determined by the LEN parameter. If LEN is
.* omitted, the length attribute of the FIELD variable is used, if it
.* is present.
.*
.* LEN FLD,Length - Calculate the length of field FLD, assuming it
.* is right justified, and padded with blanks (X'40').  If not padded
.* with blanks, the length returned will equal the length coded in the
.* macro.
.*--------------------------------------------------------------------*
         LCLC  &G
&G       SETC  '@ST'.'&SYSNDX'
         AIF ('&OPT' EQ 'RJUST').RJUST
         AIF ('&OPT' EQ 'LJUST').LJUST
         AIF ('&OPT' EQ 'LENGTH').LENG
         AIF ('&OPT' EQ 'LENG').LENG
         AIF ('&OPT' EQ 'LEN').LENG
         LCLC &TY
&TY      SETC T'&P1
         MNOTE 9,'P1: &TY'
&TY      SETC T'&P1
         MNOTE 9,'P2: &TY'
         AGO .DONE
.*--------------------------------------------------------------------*
.* Code for LENG - Calculate length.
.*--------------------------------------------------------------------*
.LENG    ANOP
         LCLC  &FIELD
         LCLA  &LEN
&FIELD   SETC  '&P1'                    Set field to first parm.
&LEN     SETA  &P2
         AIF (T'@@@@LN EQ 'H').LENG0  Only define code once.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* STR: LENG. Get length of a space padded field.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
* LEN - Get length of a blank terminated field.
* ENTRY:
*    R0 - Maximum length of string.
*    R1 - Points to start of string.
* EXIT:
*    R1 - Length of string.
*---------------------------------------------------------------------*
         B     &G.B                Branch around code.
@@@@LN   DS    0H
         BAKR  14,0                Save caller's environment.
         SR    15,15
@@@@LN00 DS    0H
         CLI   0(1),C' '           Blank?
         BE    @@@@LN01            Yes, Return with len in R15.
         LA    1,1(1)              Bump over 1.
         LA    15,1(15)            Bump over 1.
         CR    15,0                End of search yet?
         BL    @@@@LN00            No, keep looking.
@@@@LN01 DS    0H
         LR    1,15                Load length in R1
         PR                        Return to caller.
&G.B     DS  0H
.LENG0   ANOP
         LA    0,&LEN              Get length of field.
         LA    1,&FIELD            Point to field to justify.
         BAL   14,@@@@LN           BAL to RJUST routine.
         AGO .DONE
.*
.*--------------------------------------------------------------------*
.* Code for RJUST - Right Justify.
.*--------------------------------------------------------------------*
.RJUST   ANOP
         LCLC  &FIELD
         LCLA  &LEN
&FIELD   SETC  '&P1'                    Set field to first parm.
&LEN     SETA  &P2
         AIF (T'@@@@RJ EQ 'H').RJUST0  Only define code once.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* STR: RJUST.  Right justify a text field.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*---------------------------------------------------------------------*
* RJUST - Right justify a space padded text field.
* - R0 - Length of field.
* - R1 - Pointer to field.
*---------------------------------------------------------------------*
* - R2 - Pointer to start.      |     2 34
* - R3 - Point to end of data.  |     | ||
* - R4 - Point to end of field. |     v vv
* - R8 - Length of data.        |   C'123.'
* - R9 - Save length of data.   |     ___
*                               |      8
*---------------------------------------------------------------------*
         B     &G.A                  Branch around code.
@@@@RJ   DS    0H
         BAKR  14,0                Save caller's environment.
         LR    R2,R1               -> field.
         LR    R4,R0               Load length of field.
         AR    R4,R1               -> end of field.
         BCTR  R4,0                Back up one.
         LR    R3,R4               Index register.
         CLI   0(R3),C' '          Already right justified?
         BNE   @@@@RJ99            Yes, we're done.
@@@@RJ04 DS    0H
         CLI   0(R3),C' '          Last char a space?
         BNE   @@@@RJ03            Yes, end of text found.
         CR    R3,R2               Entire field scanned?
         BE    @@@@RJ99            Yes, leave.
         BCT   R3,@@@@RJ04         Back up one and go top of loop.
@@@@RJ03 DS    0H
         LR    R8,R3               -> end of data.
         SR    R8,R2               Calc length of data.
         LA    R8,1(R8)            Add 1.
         LR    R9,R4               -> end of field.
         SR    R9,R3               Subtract to get length of pad.
@@@@RJ10 DS    0H
         MVC   0(1,R4),0(R3)       Move rightmost char.
         BCTR  R3,0                Back up one.
         BCTR  R4,0                Back up one.
         BCT   R8,@@@@RJ10         Decrement leng, go top of loop.
         LR    R3,R9               Get length for MVCL.
         SR    R9,R9               Clear length reg to zeros for pad.
         ICM   R9,B'1000',=C' '    Insert pad char.
         MVCL  R2,R8               Set leading chars to pad.
@@@@RJ99 DS    0H
         PR
         PR
&G.A     DS  0H
.RJUST0  ANOP
         LA    0,&LEN               Get length of field.
         LA    1,&FIELD             Point to field to justify.
         BAL   14,@@@@RJ            BAL to RJUST routine.
         AGO .DONE
.DONE    ANOP
         MEND
