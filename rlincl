*---------------------------------------------------------------------*
* RLINCL - Test                                                       *
*---------------------------------------------------------------------*
* 04/20/2010 John C. Miller - john@jmit.com                           *
*---------------------------------------------------------------------*
* RMTLOG Remote logging program copyright 2010-2017 John C. Miller.   *
*---------------------------------------------------------------------*
         GBLB  &NODEBUG
&NODEBUG SETB  0
RLINCL   CSECT
RLINCL   AMODE ANY
RLINCL   RMODE ANY
         PRINT GEN,DATA
         YREGS                     Do register equates.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* Prolog - Get private and common storage areas and set up.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         BAKR  R14,0                Save caller env.
         LR    R12,R15              Load base reg.
         USING RLINCL,R12           Addressability.
         MODID ,                    Eyecatcher.
         LR    R2,R1                Save R1 contents.
         STORAGE OBTAIN,LENGTH=DYNL Obtain private work area.
         LR    R13,R1               Load base reg.
         USING DATD,R13             DSECT addressability
         MVC   4(4,R13),=C'F1SA'    Indicate Fmt1 save area.
*---------------------------------------------------------------------*
* Call init routine to:                                               *
* - Read, parse and validate PARMS file.                              *
*---------------------------------------------------------------------*
MAIN     DS    0H
         SR    R2,R2
         SR    R3,R3
         SR    R4,R4
         LM    R2,R8,ZERO
*---------------------------------------------------------------------*
* Exit - Release storage and return to caller.                        *
*---------------------------------------------------------------------*
EXIT     DS    0H
         LR    R1,R13
         STORAGE RELEASE,LENGTH=DYNL,ADDR=(1)
         PR                        Return to caller.
ZERO     DC    18F'0'
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
* Setup:                                                              *
* Set up storage for macro models.                                    *
* Set up com area for modify, stop, etc.                              *
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
SETUP    DS    0H
         BAKR  R14,0               Save regs.
         MVI   DONE,0              Init flag.
         LA    R2,MACROS           -> MACRO storage. (tgt of MVCL)
         LA    R3,MACROSL          Get length of move.
         LA    R5,MACROSL          Get length of move.
         LA    R4,MACROSM          -> MACRO models. (src of MVCL)
         MVCL  R2,R4               Populate all MACRO storage.
         PR                        Return to caller.
*---------------------------------------------------------------------*
*  MSG - WTO a message.                                               *
*---------------------------------------------------------------------*
MSG    DS      0H
       BAKR    R14,0              Save callers environment.
       SAC     0                  Set primary mode.
       SYSSTATE ASCENV=P          Tell macros PRIMARY mode.
       LR      R2,R1              Point R2 to msg text passed in R1.
       WTO     TEXT=(R2),         WTO the message.                     X
               MF=(E,WTOPL)
       PR                         return to caller
*
*---------------------------------------------------------------------*
* MACRO Models.  All models in this section are copied to working     *
* storage in the section called: Macro Working Storage.  This is to   *
* enable this program to be reentrant.  The model section is copied   *
* to working storage by the SETUP subroutine at the startup of this   *
* program.                                                            *
*---------------------------------------------------------------------*
         CNOP  0,4
MACROSM  DS    0H
*-
EXTRACTM EXTRACT MF=L              EXTRACT parameter list.
EXTRACTL EQU *-EXTRACTM
*
SUPM     MODESET MODE=SUP,MF=L     MODESET parm list for sup state
SUPL     EQU *-SUPM
*
SUP0M    MODESET MODE=SUP,                                             X
               KEY=ZERO,MF=L       MODESET parm list for sup, key 0
SUP0L    EQU *-SUP0M
PROBM    MODESET MODE=PROB,                                            X
               KEY=NZERO,MF=L      MODESET parm list for problem state
PROBL    EQU *-PROBM
*-
WTOPLM   WTO TEXT=,DESC=(7),MF=L   WTO parm list.
WTOPLL   EQU *-WTOPLM
*-
MACROSL  EQU *-MACROSM             Length of all macro models.
*
*---------------------------------------------------------------------*
* Messages (for WTO).
*---------------------------------------------------------------------*
SHUTTING DC     AL2(L'MSG0)
MSG0     DC     C'RLG000I RMTLOG Starting shutdown.'
NOTACT   DC     AL2(L'MSG2)
MSG2     DC     C'RLG002I Console not deactivated, was not active.'
ACTOK    DC     AL2(L'MSG3)
MSG3     DC     C'RLG003I Console activated successfully.'
ACTBAD   DC     AL2(L'MSG4)
MSG4     DC     C'RLG004I Console failed to activate.'
DACTOK   DC     AL2(L'MSG5)
MSG5     DC     C'RLG005I Console deactivated.'
DACTBAD  DC     AL2(L'MSG6)
MSG6     DC     C'RLG006I Console deactivate failed.'
*---------------------------------------------------------------------*
*   Private working storage.
*---------------------------------------------------------------------*
DATD     DSECT                     Dynamic area.
SAVE     DS    18F                 Register save area.  Must be first
*---
TIMEDATE DS    4F
DWORK    DS    D
WRK      DS    CL8
* BUFFERL  DS    F
BUFFER2  DS    CL255
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*--- ECB List - This is a list of pointers to ECBs. The WAIT macro ---*
*--- works with all ECBs in this list.                             ---*
*---------------------------------------------------------------------*
*---v---v---v---v---v---v---v---v---v---v---v---v---v---v---v---v---v-*
         CNOP  0,4
ECBS     DS    0CL(ECBLEN)
AECBMSG  DS    A                   -> ECB for console messages.
AECBALRT DS    A                   -> ECB for ALERT.
AECBMOD  DS    A                   -> ECB for MODIFY (STOP,etc).
ECBLEN   EQU   *-AECBMOD
*---
*--- ECBs - These are the actual ECBs.
*---
ECBMSG   DS    F                   ECB for console message.
ECBALRT  DS    F                   ECB for alert.
*--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- -*
*---------------------------------------------------------------------*
*--- End of ECB List and ECBs.                                        *
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
MCSPL    MCSOPER MF=(L,MCSOPPL)   MCSOPER parameter list
MCSMPL   MCSOPMSG MF=(L,MCSOPMPL),PLISTVER=2 MCSOPMSG Parm List
RC       DS    F                  Return code.
RSN      DS    F                  Reason code.
DONE     DS    C                  Flag - Set to '1' to signify exit.
CSAALET  DS    F                  ALET (mcscsa)
CSA      DS    A                  Addr (mcscsa)
OPERPRM  DS    CL(MCSOPLEN)       OPERPARMs area
TXTOFF   DS    F                  Offset to text area.
MDBFLAG  DS    C                  MDB processing flags.
MDBFGO   EQU   X'01'              Processed MDB general object.
MDBFCO   EQU   X'02'              Processed MDB control prog object.
COMADDR DS     F                  Addr (comarea) from extract macro.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* MACRO working storage.  Each macro in this section should have a
* corresponding model in the constants section.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         CNOP  0,4
MACROS   DS    0H
EXTRACT  DS    CL(EXTRACTL)        EXTRACT parameter list
SUP      DS    CL(SUPL)            MODESET parm list.
SUP0     DS    CL(SUP0L)           MODESET parm list.
PROB     DS    CL(PROBL)           MODESET parm list.
WTOPL    DS    CL(WTOPLL)          WTO parm list.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* M I S C . . . . . . . . . . .
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
PARML    DS    4F                  parm list.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* End of MACROS working storage
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*---------------------------------------------------------------------*
*   End on doubleword boundary.                                       *
*---------------------------------------------------------------------*
         DS    0D
ENDDATD  EQU   *
DYNL     EQU    *-DATD
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* DSECT mapping macros.
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        DCBD    DSORG=QS
         IKJCPPL                   CPPL for PUTLINE.
         IEAVG132 ,                MDB prefix area.
         IEAVM105 ,                MDB.
         IEAVG131 ,                Console status area.
         IEZVG111 ,                OPERPARM parameter area.
COM      DSECT
         IEZCOM   ,                COM area
CIB      DSECT
         IEZCIB   ,                CIB and CIBX
         END
